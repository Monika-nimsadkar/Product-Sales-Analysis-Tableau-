<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top n' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='8'>
        <calculation class='tableau' formula='8' />
        <range max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='Managers' inline='true' name='federated.06yz1e11brqzbm14phhrq18yjaik' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Managers' name='textscan.0b4onvk0f1e37j1d3z2xy171l1ow'>
            <connection class='textscan' directory='C:/Users/HP/Documents/super store sales' filename='Managers.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation all='true' name='Orders.csv+' type='union'>
            <columns header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Row ID' />
              <column datatype='string' name='Order ID' />
              <column datatype='date' name='Order Date' />
              <column datatype='date' name='Ship Date' />
              <column datatype='string' name='Ship Mode' />
              <column datatype='string' name='Customer ID' />
              <column datatype='string' name='Customer Name' />
              <column datatype='string' name='Segment' />
              <column datatype='string' name='Country' />
              <column datatype='string' name='City' />
              <column datatype='string' name='State' />
              <column datatype='integer' name='Postal Code' />
              <column datatype='string' name='Region' />
              <column datatype='string' name='Product ID' />
              <column datatype='string' name='Category' />
              <column datatype='string' name='Sub-Category' />
              <column datatype='string' name='Product Name' />
              <column datatype='real' name='Sales' />
              <column datatype='integer' name='Quantity' />
              <column datatype='real' name='Discount' />
              <column datatype='real' name='Profit' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Orders.csv' table='[Orders#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Orders 2015.csv' table='[Orders 2015#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Orders 2016.csv' table='[Orders 2016#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Order 2017.csv' table='[Order 2017#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Managers.csv' table='[Managers#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Returns.csv' table='[Returns#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders.csv+].[Category]' />
          <map key='[City]' value='[Orders.csv+].[City]' />
          <map key='[Country]' value='[Orders.csv+].[Country]' />
          <map key='[Customer ID]' value='[Orders.csv+].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders.csv+].[Customer Name]' />
          <map key='[Discount]' value='[Orders.csv+].[Discount]' />
          <map key='[Order Date]' value='[Orders.csv+].[Order Date]' />
          <map key='[Order ID (Returns.csv)]' value='[Returns.csv].[Order ID]' />
          <map key='[Order ID]' value='[Orders.csv+].[Order ID]' />
          <map key='[Person]' value='[Managers.csv].[Person]' />
          <map key='[Postal Code]' value='[Orders.csv+].[Postal Code]' />
          <map key='[Product ID]' value='[Orders.csv+].[Product ID]' />
          <map key='[Product Name]' value='[Orders.csv+].[Product Name]' />
          <map key='[Profit]' value='[Orders.csv+].[Profit]' />
          <map key='[Quantity]' value='[Orders.csv+].[Quantity]' />
          <map key='[Region (Managers.csv)]' value='[Managers.csv].[Region]' />
          <map key='[Region]' value='[Orders.csv+].[Region]' />
          <map key='[Returned]' value='[Returns.csv].[Returned]' />
          <map key='[Row ID]' value='[Orders.csv+].[Row ID]' />
          <map key='[Sales]' value='[Orders.csv+].[Sales]' />
          <map key='[Segment]' value='[Orders.csv+].[Segment]' />
          <map key='[Ship Date]' value='[Orders.csv+].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders.csv+].[Ship Mode]' />
          <map key='[State]' value='[Orders.csv+].[State]' />
          <map key='[Sub-Category]' value='[Orders.csv+].[Sub-Category]' />
          <map key='[Table Name]' value='[Orders.csv+].[Table Name]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Managers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Managers.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Managers.csv)]</local-name>
            <parent-name>[Managers.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Returns.csv)]</local-name>
            <parent-name>[Returns.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='revenue' datatype='real' name='[Calculation_1295629366675615744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]-[Discount]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Discount (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Discount]' peg='0' size='0.1212' />
      </column>
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region (Managers.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Managers.csv' datatype='table' name='[__tableau_internal_object_id__].[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]' role='measure' type='quantitative' />
      <column caption='Orders.csv' datatype='table' name='[__tableau_internal_object_id__].[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]' role='measure' type='quantitative' />
      <column caption='Returns.csv' datatype='table' name='[__tableau_internal_object_id__].[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region (Managers.csv)]' derivation='None' name='[none:Region (Managers.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HP/AppData/Local/Temp/TableauTemp/#TableauTemp_00vchsl1b0xy4919q22v6129ls9r.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/19/2025 05:27:23 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0' table='[Extract].[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]' type='table' />
            <relation name='Managers.csv_ECB63EAE6686447C89F29403BC409A7C' table='[Extract].[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]' type='table' />
            <relation name='Returns.csv_AA520665E0CF40B29E822D5E19D41AB0' table='[Extract].[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]' type='table' />
          </relation>
          <cols>
            <map key='[Category]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Category]' />
            <map key='[City]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[City]' />
            <map key='[Country]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Country]' />
            <map key='[Customer ID]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Customer Name]' />
            <map key='[Discount]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Discount]' />
            <map key='[Order Date]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Order Date]' />
            <map key='[Order ID (Returns.csv)]' value='[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0].[Order ID]' />
            <map key='[Order ID]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Order ID]' />
            <map key='[Person]' value='[Managers.csv_ECB63EAE6686447C89F29403BC409A7C].[Person]' />
            <map key='[Postal Code]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Postal Code]' />
            <map key='[Product ID]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Product ID]' />
            <map key='[Product Name]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Product Name]' />
            <map key='[Profit]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Profit]' />
            <map key='[Quantity]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Quantity]' />
            <map key='[Region (Managers.csv)]' value='[Managers.csv_ECB63EAE6686447C89F29403BC409A7C].[Region]' />
            <map key='[Region]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Region]' />
            <map key='[Returned]' value='[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0].[Returned]' />
            <map key='[Row ID]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Row ID]' />
            <map key='[Sales]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Sales]' />
            <map key='[Segment]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Segment]' />
            <map key='[Ship Date]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Ship Mode]' />
            <map key='[State]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[State]' />
            <map key='[Sub-Category]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Sub-Category]' />
            <map key='[Table Name]' value='[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0].[Table Name]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3212</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders.csv+</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1360</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders.csv+</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1449</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>616</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2011</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3501</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4166</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person]</local-name>
              <parent-name>[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>22</ordinal>
              <family>Managers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (Managers.csv)]</local-name>
              <parent-name>[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>23</ordinal>
              <family>Managers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>24</ordinal>
              <family>Returns.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns.csv)]</local-name>
              <parent-name>[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>25</ordinal>
              <family>Returns.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.938202' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0617978' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Returned:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#051c61'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#0e6ece'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#2d9ced'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#96f2ee'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region (Managers.csv):nk]' type='palette'>
            <map to='#0e6ece'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#2d9ced'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#96f2ee'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#0e6ece'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#2d9ced'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#96f2ee'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' palette='sf_water' type='palette'>
            <map to='#051c61'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#0e6ece'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#073e92'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#2d9ced'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#96f2ee'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Managers.csv' id='Managers.csv_ECB63EAE6686447C89F29403BC409A7C'>
            <properties context=''>
              <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Managers.csv' table='[Managers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Managers.csv_ECB63EAE6686447C89F29403BC409A7C' table='[Extract].[Managers.csv_ECB63EAE6686447C89F29403BC409A7C]' type='table' />
            </properties>
          </object>
          <object caption='Orders.csv' id='Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0'>
            <properties context=''>
              <relation all='true' name='Orders.csv+' type='union'>
                <columns header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Row ID' />
                  <column datatype='string' name='Order ID' />
                  <column datatype='date' name='Order Date' />
                  <column datatype='date' name='Ship Date' />
                  <column datatype='string' name='Ship Mode' />
                  <column datatype='string' name='Customer ID' />
                  <column datatype='string' name='Customer Name' />
                  <column datatype='string' name='Segment' />
                  <column datatype='string' name='Country' />
                  <column datatype='string' name='City' />
                  <column datatype='string' name='State' />
                  <column datatype='integer' name='Postal Code' />
                  <column datatype='string' name='Region' />
                  <column datatype='string' name='Product ID' />
                  <column datatype='string' name='Category' />
                  <column datatype='string' name='Sub-Category' />
                  <column datatype='string' name='Product Name' />
                  <column datatype='real' name='Sales' />
                  <column datatype='integer' name='Quantity' />
                  <column datatype='real' name='Discount' />
                  <column datatype='real' name='Profit' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Orders.csv' table='[Orders#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Orders 2015.csv' table='[Orders 2015#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Orders 2016.csv' table='[Orders 2016#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Order 2017.csv' table='[Order 2017#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0' table='[Extract].[Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0]' type='table' />
            </properties>
          </object>
          <object caption='Returns.csv' id='Returns.csv_AA520665E0CF40B29E822D5E19D41AB0'>
            <properties context=''>
              <relation connection='textscan.0b4onvk0f1e37j1d3z2xy171l1ow' name='Returns.csv' table='[Returns#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns.csv_AA520665E0CF40B29E822D5E19D41AB0' table='[Extract].[Returns.csv_AA520665E0CF40B29E822D5E19D41AB0]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Managers.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0' />
            <second-end-point object-id='Managers.csv_ECB63EAE6686447C89F29403BC409A7C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_5CED6F7EF6564D6E9689D79C76741DD0' />
            <second-end-point object-id='Returns.csv_AA520665E0CF40B29E822D5E19D41AB0' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Yu Gothic Light'>Sub-Category wise Average sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
          </datasources>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.06yz1e11brqzbm14phhrq18yjaik].[avg:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#002d7f' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#002d7f' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-color' value='#002d7f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#002d7f' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' value='#002d7f' />
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' id='legend-color' value='#ddebf0' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' id='legend-color' value='#002d7f' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' id='legend-color' value='solid' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' id='legend-color' value='2' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#002d7f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06yz1e11brqzbm14phhrq18yjaik].[avg:Sales:qk]</rows>
        <cols>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{8584E15B-5616-4C27-BDB3-27DB8C97ABF9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#002d7f' fontname='Yu Gothic Light'>Sum of profit by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
          </datasources>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='rows' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#002d7f' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#002d7f' />
            <format attr='border-width' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]' />
              <wedge-size column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]' />
              <size column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]' />
              <text column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F74C7266-A114-4FD1-BE9A-F50E13466BF5}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#002d7f' fontname='Yu Gothic Light'>States by sum of Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='8'>
              <calculation class='tableau' formula='8' />
              <range max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[Longitude (generated)]' field-type='quantitative' max='-7291126.7570747081' min='-15481960.511419216' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[Latitude (generated)]' field-type='quantitative' max='5994732.2112084404' min='2670684.9953391585' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0055ff</color>
                <color>#296ef8</color>
                <color>#5086f2</color>
                <color>#769dec</color>
                <color>#99b2e5</color>
                <color>#bac6df</color>
                <color>#d9d9d9</color>
                <color>#afacc9</color>
                <color>#8a84ba</color>
                <color>#6960ab</color>
                <color>#4c419c</color>
                <color>#32268d</color>
                <color>#1d107e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#002d7f' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4e7ed' />
            <format attr='color' value='#002d7f' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Sales:qk]' />
              <size column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Sales:qk]' />
              <lod column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:State:nk]' />
              <lod column='[Parameters].[Quantity Parameter]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06yz1e11brqzbm14phhrq18yjaik].[Latitude (generated)]</rows>
        <cols>[federated.06yz1e11brqzbm14phhrq18yjaik].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{060BABA9-90B1-497B-A1C4-B0CC2EE60D4A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#002d7f' fontname='Yu Gothic Light'>Sum of Sales by sum of Quantity for Order IDs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
          </datasources>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#002d7f' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' id='legend-color' value='2' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' id='legend-color' value='solid' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' id='legend-color' value='#002d7f' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' />
              <lod column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Order ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Quantity:qk]</rows>
        <cols>[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E01C95D7-9DC1-446A-B56F-4C83E7AD39BE}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#002d7f' fontname='Yu Gothic Light'>Profit by Segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
          </datasources>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Ship Mode:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Ship Mode:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Ship Mode:nk]' value='0' />
            <format attr='text-align' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Ship Mode:nk]' value='left' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]</rows>
        <cols>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{B9AA514A-8BC9-4599-AE14-E8313BF2E86B}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#002d7f' fontname='Yu Gothic Light'>Revenue for each categories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='8'>
              <calculation class='tableau' formula='8' />
              <range max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column caption='revenue' datatype='real' name='[Calculation_1295629366675615744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[Discount]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1295629366675615744]' derivation='Sum' name='[sum:Calculation_1295629366675615744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]'>
            <groupfilter count='[Parameters].[Quantity Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1295629366675615744])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]' direction='DESC' using='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Calculation_1295629366675615744:qk]' />
          <slices>
            <column>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]' value='#ddebf0' />
            <format attr='background-color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' value='#ddebf0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#ddebf0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Calculation_1295629366675615744:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Calculation_1295629366675615744:qk]' value='revenue'>
              <formatted-text>
                <run>revenue</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Calculation_1295629366675615744:qk]' />
              <text column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Calculation_1295629366675615744:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk] / [federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{69C6006D-0E50-40EE-98BF-4D1AA6C243AA}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#002d7f' fontname='Yu Gothic Light' fontsize='10'>Sum of Discount for each Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Managers' name='federated.06yz1e11brqzbm14phhrq18yjaik' />
          </datasources>
          <datasource-dependencies datasource='federated.06yz1e11brqzbm14phhrq18yjaik'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4e7ed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Discount:qk]' />
              <text column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' />
              <text column='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Discount:qk]' />
              <color column='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E9C85F86-6F43-436E-B80E-FA2A81D653C8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e7f1f5' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-orientation' id='dash-text_3' value='0' />
          <format attr='vertical-align' id='dash-text_3' value='center' />
          <format attr='text-align' id='dash-text_3' value='center' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#002d7f' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#002d7f' />
          <format attr='background-color' value='#ddebf0' />
          <format attr='border-width' value='3' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[Parameters].[Quantity Parameter]' value='2' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#002d7f' />
          <format attr='text-align' value='left' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='top n' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='8'>
          <calculation class='tableau' formula='8' />
          <range max='20' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone forceUpdate='true' h='10188' id='3' type-v2='text' w='57170' x='1559' y='3753'>
          <formatted-text>
            <run bold='true' fontcolor='#002d7f' fontname='Yu Gothic Light' fontsize='22'>PRODUCT SALES ANALYSIS</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#b4e7ed' />
          </zone-style>
        </zone>
        <zone h='47051' id='4' name='Sheet 1' w='34850' x='1933' y='15282' />
        <zone h='47319' id='6' name='Sheet 2' w='21322' x='37469' y='15147' />
        <zone friendly-name='Legends and Filters' h='61528' id='9' param='vert' type-v2='layout-flow' w='12656' x='86222' y='4424'>
          <zone h='12466' id='8' mode='slider' param='[Parameters].[Quantity Parameter]' type-v2='paramctrl' w='12656' x='86222' y='4424'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='18498' id='7' name='Sheet 2' pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]' type-v2='color' w='12656' x='86222' y='16890'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='15147' id='5' name='Sheet 1' pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' type-v2='color' w='12656' x='86222' y='35388'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='15147' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' type-v2='color' w='12656' x='86222' y='50535'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='36059' id='10' name='Sheet 3' w='32170' x='1995' y='63673' />
        <zone h='58177' id='11' name='Sheet 4' w='26060' x='59476' y='4155' />
        <zone h='35523' id='13' name='Sheet 5' w='29052' x='34913' y='63807' />
        <zone h='35791' id='14' name='Sheet 6' w='24626' x='64713' y='63673' />
        <zone h='36729' id='23' name='Sheet 7' w='15524' x='86596' y='65952' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97856' id='24' param='vert' type-v2='layout-flow' w='99002' x='499' y='1072'>
                <zone forceUpdate='true' h='10188' id='3' type-v2='text' w='57170' x='1559' y='3753'>
                  <formatted-text>
                    <run bold='true' fontcolor='#002d7f' fontname='Yu Gothic Light' fontsize='22'>PRODUCT SALES ANALYSIS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#b4e7ed' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58177' id='11' is-fixed='true' name='Sheet 4' w='26060' x='59476' y='4155'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15147' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' type-v2='color' w='12656' x='86222' y='50535'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12466' id='8' mode='slider' param='[Parameters].[Quantity Parameter]' type-v2='paramctrl' w='12656' x='86222' y='4424'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47319' id='6' is-fixed='true' name='Sheet 2' w='21322' x='37469' y='15147'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18498' id='7' name='Sheet 2' pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]' type-v2='color' w='12656' x='86222' y='16890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47051' id='4' is-fixed='true' name='Sheet 1' w='34850' x='1933' y='15282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15147' id='5' name='Sheet 1' pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' type-v2='color' w='12656' x='86222' y='35388'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36059' id='10' is-fixed='true' name='Sheet 3' w='32170' x='1995' y='63673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35791' id='14' is-fixed='true' name='Sheet 6' w='24626' x='64713' y='63673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35523' id='13' is-fixed='true' name='Sheet 5' w='29052' x='34913' y='63807'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36729' id='23' is-fixed='true' name='Sheet 7' w='15524' x='86596' y='65952'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{50C59033-E718-43DE-8C89-4EC562A53D5D}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='13' param='vert' removable='false' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='7774' id='14' type-v2='title' w='99002' x='499' y='1072'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90082' id='11' param='vert' removable='false' type-v2='layout-flow' w='99002' x='499' y='8846'>
              <zone h='90082' id='9' param='vert' removable='false' type-v2='layout-flow' w='99002' x='499' y='8846'>
                <zone h='90082' id='7' param='vert' removable='false' type-v2='layout-flow' w='99002' x='499' y='8846'>
                  <zone h='90082' id='1' param='vert' removable='false' type-v2='layout-flow' w='99002' x='499' y='8846'>
                    <zone h='10590' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99002' x='499' y='8846' />
                    <zone h='79492' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99002' x='499' y='19436'>
                      <flipboard active-id='7' nav-type='number' show-nav-arrows='true'>
                        <story-points>
                          <story-point caption='1' captured-sheet='Sheet 1' id='1' />
                          <story-point caption='2' captured-sheet='Sheet 2' id='2' />
                          <story-point caption='3' captured-sheet='Sheet 3' id='3' />
                          <story-point caption='4' captured-sheet='Sheet 4' id='4' />
                          <story-point caption='5' captured-sheet='Sheet 5' id='5' />
                          <story-point caption='6' captured-sheet='Sheet 6' id='6' />
                          <story-point caption='dashboard' captured-sheet='Dashboard 1' id='7' />
                        </story-points>
                      </flipboard>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{409C0A2C-DA0A-436F-92FB-6F403A6F582D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{587C28C4-9B78-4C1A-B129-6B6EFC0906D9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Quantity Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BFFACAC7-BBC2-447C-A119-D4873071A38E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Sales:qk]' type='size' />
            <card param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:State:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Country:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC57C00F-D57A-4CFD-9E6B-A332BB30B14F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:City:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Customer ID:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Order ID:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Postal Code:ok]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Product ID:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Returned:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBA54F3A-A227-47E5-80BD-F50B8BE52B2E}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Ship Mode:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD80959F-AD43-4BA7-A9D8-4A7313F676E1}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Calculation_1295629366675615744:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Quantity Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Order ID:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region (Managers.csv):nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Sub-Category:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[yr:Order Date:ok]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{894BDF1A-0B30-4237-9391-63007DD70731}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Discount (bin):qk]</field>
            <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region (Managers.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25AD89D1-F53A-44DE-A7E0-48CE9D77D2AB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.06yz1e11brqzbm14phhrq18yjaik].[sum:Profit:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 6' />
        <viewpoint name='Sheet 7'>
          <highlight field='[federated.06yz1e11brqzbm14phhrq18yjaik].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{9E776373-0245-49C2-9D18-98AF9906475F}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='14' />
      <simple-id uuid='{EB9856F5-EC19-49AC-A906-1A5A1933454F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      qkUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      P5KAMDI06lBWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAUO0lEQVR4nO3d+W8c533H8fczswe5vCmeoihSokiJ4qVbtuQriJsmDhIktZM4bZM0SBGg
      QH9of+kfEBQoECAJiiZonQIJ0MTNhRx2HcdonTqNrdPUxVukSC5J8VqSy3O518w8/YGKLMeK
      SEd7iJrvC6C0O1zy+e5yPzszO/t9RmmtNUK4kFJKeQDilk0saWW7HiEyzgMQS1osRGLZrkWI
      jDOyXYAQ2SQBEK4mARCuJgEQriYBEK4mARCuJgF4QFjxVc6+9jN+9P0X6R26SWR2kB/8+Jd3
      3GKVF7/2bVb/wM/r+AKv/uI1opYGNF1v/pLXf3sJ5x5jvvadf2RwPnX3YTuSADwget/4OQML
      Bk2NdcxOTaIdm+j6GgOXzjEwPAn4Of6nTxLAZri/nxu9l+gdGMX53XH8xCKXXnqR8dAKJJc5
      c/Zt+q90odGshMa5eOYMc0sRANYXp7l45i0mJkNYDtjxNa6ce5PgpPvSIAF4QBSWljB5vZtl
      K4eTJ48AMHrtLXqHbvCf33yBVSK8+sP/IkmCl7/zLS51D/Kr732TS4Mzt39Ha3M5/X3DLIwN
      sKPpMDkmxJcmeOGf/5Wx0UH+7Rv/wsLiDC98/esEJyaYW1gGneTn3/4G3UNBfvStrzG2mMjW
      Q5AVEoAHRP2xZ/ji5z7BzLVf88J3fwrA3sMf4NnnP8f+qhySd9w2r3wfn3j+s3zqY6cZvxm6
      vbxqXxvzwQFuXB/hQEsTAIvBbsqOfZTn/vKvOFaTpHtgiKK9T/Kpz3yWlsadEJ2nbzpOfU01
      1WU+RsfnMnm3s04C8IAYunyGuajJ8cceJxKevedtregKweEh3jp7jYqKktvLzUAFlc4Ml27G
      qK0sBiC/opZQ39vc6O+m/2aCXZUlzI33MHxjgJtTYfAXUJlvklNSyZGnnmFPRV5a7+eDxpPt
      AsSGkrJS3n7tdda1n+c++xm8uZrGffUANLR34MdPy9FWTCAZW+LNX71CdduHOHlw18Yv8BZQ
      vquW3XUl+OZyKcgJsL+5kfyqFj72gSl+8z9vcOrZz7O3fg8feWqE/3vjDLVtj1Ccl8+zf/4p
      Xnnlv1F5lTyzryNrj0E2KK21Xo7G5cNw20aUb3/1Bb7wD3+HP9ulbHMN5cVKArDtOMzPzlNa
      WSHbr/epobxYySbQtmNQVlmR7SIeGvIiIlxNAiBc7YENgEdluwLhBg9sALyGJECk3wMbACEy
      QQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTT4LJLJiQWliGT7UU6ihQL97UAmAyIpxUxMyMztm
      k6UosN+9LHWbQFqjtc3M2Chx+3eLbIJ9V+nt6SfpgNYOE9evcX0wiKM1ViLC8lIEtGZ5dor1
      pH3vMYRIsZQFQDsWwz1XmRgdIWoD2mHw8nlyq5to2luNZcFE1zmShfWU567T2z+OFVtidnaJ
      RGSBweAMOR7ZJRGZlbJnnDK97Gs7SkVpAQA6scZyXLE41sfwRBi/VzO7ZrOnuoiS6r3EV2fR
      gGNbDPb209TWhqHu2D5T8lkgkX5p2wdwbIv1aIKO4yeJzvTS1TuJRqMAjUJrjcZhNjiAmVdA
      k3+jFJ+hMBR4FTiyQnhoZeOzjh4F/t97TqUtAGZOHgG/F9NQ5JeWYs1EyfcoluM2uckVPL48
      DAyqG1qpLFinr+8GHa37SNyaykwB8XtNaya2tWy8uFn6vc+plAXATkYZ6u4ivBAmFL1AXVMb
      LQfq6Oq8ABg0Hz6O39pB1+XzaGXSdOgYhrNEIABFO3dSsniVpfUkJXm+VJUkxKYe2Kb4XFMR
      teX8fQ+rKx4nK2+D7rHf2fZqKC9WspUtXE0CIFxNjgSLrJgNQzCR2U3cygAQkI9CiAfAlX7N
      hZnNb5dKlQfhUOO7l8kmkHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1
      CYBwtZTOCrEWnuba+fNErHcWRxdnePPNcwBY0WW63j7Hlbc7WYtZJNbDTE2GQTuMD/QSScis
      ECKzUjgrhM3qukWuxyH5u7YzbTMyHMSxN5ptbnRdpebgMZqbahjqH8SxoqytRVkNjbGY9BHw
      ygpJZFbKPg2qTA/Vu2pJhKdvL5sP9pJX00xk+AoAqxYcyPOirVLs+AQOhcxNjBAOmRw5dQql
      FN5bTfEeQ+HT0hH2sNqYASSzf1+PAb5MNcVbsSWGxpdpbncYj8WIrEdBqVt3WYMChaKorILk
      WohYwsKX68VyNmaOMJV6Z00iHjpOFl7cbM17nlPp6wcwvOzcWUF4PsT62hrLKxEq8jyMh1Yp
      tqfJKahAAb7cAhobdnD1ylWOPnIMj7ERko1pU4RIHa3fu85J+awQ6wmL8LUL1Oxro65xPwC5
      ublUV5Why4sIDvQwZRRw4EAdJNcoKwN/QT4HGmJEYhZFAW+qShJiUykLgOnN5cCRk3f9XvWu
      3cDG7HF7Wg6/8w1/AaX+jYtFlbWpKkWILZO3XYSrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISr
      SQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKulrB9AOzYzwesMDYzS8fRHKfJajPZ1
      sRRJkoyusbv9NAXWLN0D4xhY7G45QbF3hZsz0NBQRs+Fi+w9+gh5vgyfOlC4WkpbIgvKd1O3
      tnar7Uyxs7GNep8Xa2GIrsl5zJUgh049gdda5WrXIMX7K3AcCA33klPTSECe/CLDUjcrhGGS
      X5DPwu0FJn6fQXjyBgM3Zjny2Gm6zg2TYyo0fhwrgYPD5GAPM4UlPP5EOQrwmwoD8BoKLbNC
      PLSyMSuE11DkZGpWCICZwavMxHM5fvoUXlNhGgYOgOOgTAOFQU1jGyoSZGohQk1ZPvE7To4d
      k1khHlrZmBUi6WhizrvPEpmynWDHTjI3NUE4vMjc1ARrq0tcHw1RUZLH/Mwkq5EY9dXFdHVf
      Z7jvGjuqG1AAStHQcYzpvk4icWuzYYRIqdStARQow2BnU+vGVTOHtsPtJC0HUCilKK1vxRsO
      kVRVlJYWoe0ku+vA8HhpP34Mbah7jyFEiqUsAIbhpayq5l3L8gLV77ld4Y7K25eV6SXn1n6v
      Lzc/VaUIsWVyHEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoE
      QLiaBEC4mgRAuFpqA6AdVhbDWLc6ubSdYHZyguXV9Y3rWrMUmiI0F0YDjp0gGk0AEFtdIWFL
      C5jIrPcVAK+hyPXc/Ue0nWSo5zI9b19kzQK0TX/nBWI2jFw5z1LMYX74GuPz66zNDnEjGCIR
      mWNifA47sUZPV28q7o8Q78v7CsDKwhyvv/KLu35PmV4a245RU1UKgBNfI2IWsru2lrbW3YyM
      zDA2u0LrwX3U729nOTR2uyV6tKeL2pZD+EzZIhOZtaWOMNNQTFzvo7qqcvMb36JtG2UaoMDM
      ycGOxtBoDEAbBtp20DhMDnZjFJTweFEOILNCuMX2mRUiEQM05868yXPPPrflwQy/Hx1PgNas
      h8MEduzGnr5J1Nb4kjEMrx8Dg5qmDoo981wfmebA3p0yK4RLPCizQmwagNnJCeKRNQKBAIZp
      kOPPuevt7GSUoe4uZidv4l/X7N3fyq5SD50XzmFbJkdPFWEV7OXa2bcwcNjTfgLUEqapKN/T
      wnzneRYryyjN96Xm3gqxBUprrZejcRYisbvewGcaGIZCoXC0RimIJe20F5ZrKqK2bAI9rP7p
      gs2FmcyO+YWDik82vrMN1FBerDZdAyRsB21pNBvbbVprtAZDpjARD4Etve2yMHSel/73MgDO
      whDf//mv01qUEJmy6RrgZv9FXn/1VfrmPejQAJHZG6zsOJmJ2oRIu00DULCjmoZ9Dazke2ls
      bka1tLNn/8FM1CZE2t07AHac4YkQbSceJ9LZy+zUFADrjo8Th/Znoj4h0mqTNYDC4/Hgzcmn
      eufO20sDRTKNoXg4bLIGiPHayy/z8Q+2c3Y8n795/oMZKkuIzLh3ALwBDu/O4zv/8TOWYiZf
      uforAGoOPc2Xnv9wJuoTIq3uHQDl4enP/z3HnrhK57SXpx9tyVBZQmTGpscBlFIU17VR5Uzw
      wje+yovf/wnLsfQfCRYiE7Z0ICw82slLbwzy/Jf/lsPVcb77g9fSXZcQGbGlAPjzSzDj83R1
      dtI7EKSquirddQmREVsKQG5pPV/40l+g7DgNjz3Hpz98LN11CZERW2qIWRq7zMu/DfHlL378
      ViODEPfHSVrY8czuS2rby++/5m8pALklO7FvvsQPfqJo2FlMfvluWvfXp6FE4RYzZ84yfHEi
      o2Mu+Y/CgXe/k7m1k+RpRcujH8Dj8WIlLeytzN6gHYJ9V1iMJLHiSfYfP4V3fZqu3lHUrYaY
      QnOZyVnYs6eM/s5O6g4dJ0/OFi8yaPN+gNVpfvS9F4kkbKpbnuITH30McytbQVaE0Kri+MlH
      SMz20jcRxpgbpv3RJ/BaK1zrvk7L/nIsC+aD/ZjldQTkyS8ybNMA9L35S8y9T/HXH2rl37/6
      FaZPH2dXiX8LvzmP8kCCt8+fJRlL0HG6mb4Q5HoUmhwcK46Dw+RgD7NFJZx+vBWFNMW7RTb6
      qTyK998Uv74ewVFRJiemsKwkwwP9qPpd1FSX3fPn7PgqC1GTwydOsB4aJDgyg6kMHADtoAwD
      hUFNYyt6NUhoMUpVaUCa4l3CycJrm6Xf+5za9G3Q2oMnKUzO0HXlErubjxIe6+PG2NSmgynD
      xE5EWZyfY3E+jOnzsbs8n76BUcaHeimurEdt3JB9HUeY6O0kmpAjzCKzNl0D1B58hNqDj7zv
      X2z48jl6/AgzMyECVc3UlZeALsWcnSSh6qmsLENbcXbVgunz0364A3nBF5m2tXeB/thfnpPP
      rvo7egeUQWlV7TtXPX4Ctyrw5xelsxQh7krmIhSuJgEQriYBEK4mARCuJgEQriYBEK4mARCu
      JgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQrpbeAGiH1fA84YVFHA1aa9aW5llaWkUDjp0k
      Hk8CkFiPYGWjTUi4WloDMDl4jZuzYdaWZllPQDjYw+BYiJnRbkYnFkhEQowFQzjJdbovX5UA
      iIxLWwC0FWFm0aK8tIC8kmry/DA6tUhHezNNrYcJT4/cPk94sPcaOw8ewu+RLTKRWWnrCHMS
      cZZXFonHK4lMdrGw2oKjHUyl0IaBth00DpOD3aiCUp7sCMisEC6ybWaF+GOZvhzy84uprq1F
      VefQ2TmD3zSJ2xqPFcfw+DAwqGnqoFDNMhgM0VRfKbNCuMSDMitE+nqCPbnUVQW4dP4cJOPU
      dZwiLx7g8tm3MLVFXesJYBmloHJfG3Pnz7JYXkJpvi9tJbmNRpONdajB9pk/No1N8YrKva1U
      7r1zWT2PVtTfcT2PxsKNS22nnkxfKS61oOCSL7MRyNXwRGL7BED2OoWrSQCEq0kAhKuldWIs
      kV3RBIwtZHYfoNBQUJzRIe+LBOAhNheGV89ndsyqgOb5P8nsmPdDNoGEq0kAhKtJAISryT5A
      CoyamhEzszubFQ60WfL6db8kACngAFaGD37KqURSQ15ChKvJGiAFFpY0/SuZ3QSycxWHSjM6
      5ENJApACY9Pwm/7MjpncCc9IAO6bbAIJV5MACFdLewCs6Ar9fdcB0I5FsP8qAwPD2I7GSqyx
      GF4DrVmcvsl6Ut7bEJmV5gBogoMDTNycAGC86wKU7qWyIElv/xhWbJm5uWXia3PcmJgjR5ri
      RYal9Rm3PjdCPHcXxbfOhRqK2NRVFlJcWU9iLYQGkvEY13uvs7+9DUMpFGx83Xl5G3xlw6Z1
      Zamw7fJ4QTpnhbCiXB8J03biGJdDg8BGj6qCjX/1xvXw9BhGjp8cjwlszAahFJgKvNtkhWBm
      4S9qbOHx8WShLrXFv1s2ZoW423MqbQGwElGw4vR0XmRqYoKhkZsUeg0WoxaB5BKmPx8DRWX9
      fqqL4vT2DtLR3kTiVte+AbcvP+isLHSeO3rzxyeZhcdPb6EuyN6sEL9fW9oC4AuUcvj0YwAE
      8vJo3LsLqzqf3q6LOMpLY8cRDHuJvDwoqNpJ2VIXy+tJSvJkVgiRORk5ENZ0sHVjsNxiOk6e
      uuM7O6gJbFyqPdCRiVKEeJdtspUtRHpIAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCE
      q0lLZAqsTdxk+q2xjI651FEGx5szOubDSAKQAonFJVZHRjM6ZrTKATYJgHawE4mM1PM7jk8B
      ZkbHvB8SgIfY+vQMwz/8dUbHTFTmw0f+LKNj3g/ZBxCuJgEQriYBEK6Wvn0A7TATHGR2fhnb
      gcaOY+Q4K/R29+Ng0thxFL+zzFwYampKCPb1UN7YQp5v++xAie0vrQHIKa6mrW4/1uINuoem
      yY0MU99xmlxrgd6+6xzcV0wkAsszI6yoPOq2SxOweGikLwCGh+KSIpLrS3R1j7Pn+BMMXx2m
      ONeDtopxEkEcipgZHWQhL4djpx5FKYXPUBgKPIbCr7Nxmuf3z8xCh7ehwL/J64U3C3UppTat
      C7LTFO+5y2OW1rdBV0NBegYnaTnxOIUBL6NK3TpzuQalUCjKanaTXJ0kEktSnOcj4WzMHGEo
      tW2a4u0sBHVrTfGZr0tr/cA2xdt3eczSt81hx+gfmODoo6coDGw0ulfmewnOrLA0GySnqAoF
      eHy5NLe3MnD1CpZzOx5orTf+3wZfZGlFtWldWbKlx+wBqAvSuAbQWlFcnEvf5YsAVNY3s6v1
      OOODPYRUIc37a9HJCBUV4MvPo6VpF5GYRVHAm66ShHiPtAVAefw0tR97z/K6A4feueLLp/jW
      LCgF5TXpKkWIP2jbfBQirjU/Xs/8TsGnAwb+bM0xKNJu+wQgCT99PfPjfvIj4Je5uh5a/w+d
      8rzgWiRZ7gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAGCElEQVR4nO3cf2jUdRzH8dfdbredTp24Dan8HTY1fwaG/bAiLaTQsP6opSAL8R+LsNR+
      YFkJChYqYdog/wgL+wGG5A+0VAg0gimW4fBHTefvH7edu+62nbvrD7O0jbjl1IPX8wH7Y8f7
      +/3eB/a87/d7fFkgk8lkBJgK3uo3ANxKBABrBABrBABrBABroTavZDKqPfSLNm/doda8iB54
      +FGNGjJIrZdSSiug/FDbTf6vdGtK1bt2KtW1j+4bU95p+wWy1eYMEDt9WEtWrNGYceM1dtQQ
      7d69W5K0d+d6fb5pV6cduDVRr7den68NGzdp38FjnbZfoCPafJw31p9Rt96DdM/oUQoFAxo7
      7kFFj+7XB6s/U7w1rB82fKpXFr6vvkXNWrVypQ7VnddDk6bquSkT1HD8gDbsPqYBRTFt239B
      I0rSGj7hWZX36aXYyRqt235Qs6ZNliQFwl31xrtLdLR6i3bW3fR1A5LaOQPcNnishhbHNX3a
      dC376BOdqW9Uz77DNGdWhZ6eMVtVVVUqv72HqlYs1d2PPKMPly/V6T2b9X31EaWSjfpu41c6
      GA3rzZdnavjQQfrm222SpJ1bt6j/XUP+OXAorC6F4Zu3UqAdbQIIhsKaMfs1ralaqWF9umne
      vAVKKaBA4PJPMBhUIJ1QbTRPE8aNULiwq6ZOnqSf9+2XJPUeOFKVFVNUmB/S4DHjdf7gj4ol
      m/TTgVMaP/rOm75A4L+0CSAeiyrRfEmRoh6a+MRU9Q4lFb8khUIhtbSk/tqqQEWBhM7EEpIy
      OnzkN5WUlUiSuvcoVjAQuDyW30UT7y3X119+oeIBoxQJBW7awoBstLkHOF9Xo/eWrVFpWZlS
      ybj6jn1MPfOlvPIRWj53oX7fu12Vs+fr+Yqn9M78OepV3E3xS2EtWlSp5uN72hxg/ONPqqLi
      BS1Yufaa1+tqqvXx2vWKnTuus4k8nfh1l2a+9Kr6lRbduNUC/xJo72G4luakotEGhSNd1bO4
      u658bifiFxWLJ1VaWqpQXvDv30tKS5WfF1RrqlmNyZSKu1/+I85kMkpePKuFi1dr8eK3lXfV
      CaClKaHz0Yar34pKysoUDuXdwOUC12o3gM5yqHqHlqxap8oX5+r+kVz/I/fc0ACAXMejELBG
      ALBGALBGALBGALBGALDWeQ/3A9cpkUiopaUl6/nCwkI1NTVd1zwBIGek02ml0+ms5zOZTIfm
      29s/l0CwRgDIaYnGBh0/dTbr+WQ8ptraWp29UJ/VPAEgpwVCBUq3ZH+dn1/QRf363qH6Cxey
      muceADktEol0aD7T2qyaIyfUf+CgrOY5AyCHZXTu9ElFo1E1NP6R1RanT55UuKBAsdjFrOZ5
      GhQ5Ix6Pd+hr0EgkomQymfV8e1+DcgaANe4BkDOu/OOFjm5zPfvnEgjWuASCNQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKAtT8BlhtokNiWrWEAAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
